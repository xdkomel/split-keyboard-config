/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        cstmmt: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ch_locale {
            bindings = <&kp LG(SPACE)>;
            key-positions = <38 39>;
            layers = <0>;
        };

        quick_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <15 20>;
            layers = <0>;
            timeout-ms = <80>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESCAPE     &kp Q  &kp W           &cstmmt LCTRL E       &kp R           &kp T             &kp Y        &kp U            &cstmmt LCTRL I       &kp O           &kp P          &kp LEFT_BRACKET
&kp CAPSLOCK   &kp A  &cstmmt LALT S  &cstmmt LEFT_SHIFT D  &cstmmt LCMD F  &kp G             &kp H        &cstmmt LCMD J   &cstmmt LEFT_SHIFT K  &cstmmt LALT L  &kp SEMICOLON  &kp SQT
&kp BACKSPACE  &kp Z  &kp X           &kp C                 &kp V           &kp B             &kp N        &kp M            &kp COMMA             &kp PERIOD      &kp FSLH       &tog 4
                                      &kp GRAVE             &lt 3 TAB       &mt LCMD SPACE    &lt 1 ENTER  &lt 2 BACKSPACE  &kp ESCAPE
            >;
        };

        arrows_and_symbols {
            bindings = <
&trans  &trans    &kp MINUS            &mt LCTRL LEFT_BRACKET           &kp AT_SIGN   &kp PIPE         &kp RIGHT_BRACKET      &kp ASTERISK    &kp UP_ARROW      &kp PLUS         &trans       &trans
&trans  &trans    &mt LALT UNDERSCORE  &mt LEFT_SHIFT LEFT_PARENTHESIS  &mt LCMD SQT  &kp AMPERSAND    &kp RIGHT_PARENTHESIS  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &kp CARET    &trans
&trans  &kp HASH  &kp LEFT_BRACE       &kp LESS_THAN                    &kp EQUAL     &kp BACKSLASH    &kp RIGHT_BRACE        &kp DOLLAR      &kp GREATER_THAN  &kp EXCLAMATION  &kp PERCENT  &trans
                                       &trans                           &trans        &trans           &trans                 &trans          &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COMMA    &trans  &kp ASTERISK    &mt LCTRL PERCENT  &kp PLUS        &trans  &trans
&trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp DOT      &trans  &mt LCMD SLASH  &mt LSHIFT EQUAL   &mt LALT MINUS  &trans  &trans
&trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans       &trans  &trans          &trans             &trans          &trans  &trans
                              &kp NUMBER_0  &trans        &trans       &trans  &trans          &trans
            >;
        };

        functional {
            bindings = <
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp BACKSLASH    &trans  &trans                &kp C_VOLUME_UP    &trans                &trans  &bt BT_NXT
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans           &trans  &kp C_BRIGHTNESS_DEC  &kp K_VOLUME_DOWN  &kp C_BRIGHTNESS_INC  &trans  &bt BT_CLR
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans           &trans  &kp RIGHT_BRACKET     &kp K_MUTE         &trans                &trans  &trans
                         &trans  &trans  &trans           &trans  &trans                &trans
            >;
        };

        game_mode {
            bindings = <
&lt 2 ESCAPE    &kp Q  &kp W  &kp E     &kp R     &kp T        &kp Y      &kp U          &kp I      &kp O       &kp P          &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F     &kp G        &kp H      &kp J          &kp K      &kp L       &kp SEMICOLON  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V     &kp B        &kp N      &kp M          &kp COMMA  &kp PERIOD  &kp FSLH       &tog 4
                              &kp LALT  &kp LCMD  &kp SPACE    &kp ENTER  &kp BACKSPACE  &kp RSHFT
            >;
        };
    };
};
