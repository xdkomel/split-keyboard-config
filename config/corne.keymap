/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        cstmmt: custom_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <130>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ch_locale {
            bindings = <&kp LG(SPACE)>;
            key-positions = <38 39>;
            layers = <0>;
            timeout-ms = <80>;
        };

        quick_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <3 8>;
            layers = <0>;
            timeout-ms = <80>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESCAPE     &kp Q            &kp W           &cstmmt LSHFT E  &kp R           &kp T             &kp Y        &kp U           &cstmmt LSHIFT I  &kp O           &kp P                    &kp LEFT_BRACKET
&kp CAPSLOCK   &cstmmt LCTRL A  &cstmmt LALT S  &kp D            &cstmmt LCMD F  &kp G             &kp H        &cstmmt LCMD J  &kp K             &cstmmt LALT L  &cstmmt LCTRL SEMICOLON  &kp SQT
&kp BACKSPACE  &kp Z            &kp X           &kp C            &kp V           &kp B             &kp N        &kp M           &kp COMMA         &kp PERIOD      &kp FSLH                 &none
                                                &lt 2 GRAVE      &mt LSHIFT TAB  &mt LCMD SPACE    &lt 1 ENTER  &kp BACKSPACE   &kp ESCAPE
            >;
        };

        arrows_and_symbols {
            bindings = <
&trans  &trans     &kp NUMBER_1       &mt LSHIFT NUMBER_2  &kp NUMBER_3       &kp GREATER_THAN    &kp BACKSLASH      &kp MINUS            &mt LSHIFT SQT  &kp PLUS         &trans     &trans
&trans  &kp LCTRL  &mt LALT NUMBER_4  &kp NUMBER_5         &mt LCMD NUMBER_6  &kp LEFT_BRACE      &kp RIGHT_BRACE    &mt LCMD UNDERSCORE  &kp UP_ARROW    &mt LALT EQUAL   &kp LCTRL  &trans
&trans  &trans     &kp NUMBER_7       &kp NUMBER_8         &kp NUMBER_9       &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &trans
                                      &trans               &kp NUMBER_0       &kp SPACE           &trans             &trans               &trans
            >;
        };

        functional {
            bindings = <
&tog 3  &trans  &kp F1  &kp F2  &kp F3  &kp F10    &trans  &trans                &kp C_VOLUME_UP    &trans                &trans  &bt BT_NXT
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp C_BRIGHTNESS_DEC  &kp K_VOLUME_DOWN  &kp C_BRIGHTNESS_INC  &trans  &bt BT_CLR
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &trans                &kp K_MUTE         &trans                &trans  &trans
                        &trans  &trans  &trans     &trans  &kp BACKSPACE         &trans
            >;
        };

        game_mode {
            bindings = <
&tog 3  &kp ESCAPE      &kp Q  &kp W     &kp E     &kp R        &kp Y      &kp U          &kp I      &kp O       &kp P          &kp LEFT_BRACKET
&trans  &kp LEFT_SHIFT  &kp A  &kp S     &kp D     &kp F        &kp H      &kp J          &kp K      &kp L       &kp SEMICOLON  &kp SQT
&trans  &kp LCTRL       &kp Z  &kp X     &kp C     &kp V        &kp N      &kp M          &kp COMMA  &kp PERIOD  &kp FSLH       &trans
                               &kp LALT  &kp LCMD  &kp SPACE    &kp ENTER  &kp BACKSPACE  &kp RSHFT
            >;
        };
    };
};
